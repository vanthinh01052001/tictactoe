{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnReact\\\\my-app\\\\src\\\\components\\\\tictactoe\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport Board from \"./Board\";\nimport \"./GameStyles.css\";\nimport { calculateWinner } from \"../../helpers/helpers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  board: Array(9).fill(null),\n  xIsNext: true\n};\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'CLICK':\n      {\n        const {\n          board,\n          xIsNext\n        } = state;\n        const {\n          index,\n          winner\n        } = action.payload;\n        if (winner || board[index]) return state;\n        const nextState = JSON.parse(JSON.stringify(state));\n        nextState.board[index] = xIsNext ? \"X\" : \"O\";\n        nextState.xIsNext = !xIsNext;\n        return nextState;\n      }\n    case 'RESET':\n      {\n        const nextState = JSON.parse(JSON.stringify(state));\n        nextState.board = Array(9).fill(null);\n        nextState.xIsNext = true;\n        return nextState;\n      }\n    default:\n      console.log(\"error\");\n      break;\n  }\n  return state;\n};\nconst Game = () => {\n  _s();\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n  const winner = calculateWinner(state.board);\n  const handleClick = index => {\n    dispatch({\n      type: 'CLICK',\n      payload: {\n        index,\n        winner\n      }\n    });\n  };\n  const handleResetGame = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n    // setBoard(Array(9).fill(null));\n    // setXIsNext(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-winner\",\n        children: [\"Winner is \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        cells: state.board,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-reset\",\n        onClick: handleResetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","Board","calculateWinner","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","board","Array","fill","xIsNext","gameReducer","state","action","type","index","winner","payload","nextState","JSON","parse","stringify","console","log","Game","_s","dispatch","handleClick","handleResetGame","children","className","fileName","_jsxFileName","lineNumber","columnNumber","cells","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/learnReact/my-app/src/components/tictactoe/Game.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./GameStyles.css\";\r\nimport { calculateWinner } from \"../../helpers/helpers\";\r\n\r\nconst initialState = {\r\n  board: Array(9).fill(null),\r\n  xIsNext: true\r\n}\r\nconst gameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CLICK': {\r\n      const {board, xIsNext} = state;\r\n      const {index, winner} = action.payload;\r\n      if(winner || board[index]) return state;\r\n      const nextState = JSON.parse(JSON.stringify(state));\r\n      nextState.board[index] = xIsNext ? \"X\" : \"O\";\r\n      nextState.xIsNext = !xIsNext;\r\n      return nextState;\r\n    }      \r\n    case 'RESET': {\r\n      const nextState = JSON.parse(JSON.stringify(state));\r\n      nextState.board = Array(9).fill(null);\r\n      nextState.xIsNext = true;\r\n      return nextState;\r\n    }      \r\n    default:\r\n      console.log(\"error\");\r\n      break;\r\n  }\r\n  return state;\r\n}\r\nconst Game = () => {\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n  const winner = calculateWinner(state.board);\r\n  const handleClick = (index) => {\r\n    dispatch({\r\n      type: 'CLICK',\r\n      payload: {\r\n        index,\r\n        winner\r\n      }\r\n    })\r\n  };\r\n  const handleResetGame = () => {\r\n    dispatch({\r\n      type: \"RESET\",\r\n    })\r\n    // setBoard(Array(9).fill(null));\r\n    // setXIsNext(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n        <Board cells={state.board} onClick={handleClick} />\r\n        <button className=\"game-reset\" onClick={handleResetGame}>\r\n          Reset Game\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}