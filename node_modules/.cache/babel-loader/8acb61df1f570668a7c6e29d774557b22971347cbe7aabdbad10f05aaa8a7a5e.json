{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnReact\\\\my-app\\\\src\\\\components\\\\tictactoe\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport \"./GameStyles.css\";\nimport { calculateWinner } from \"../../helpers/helpers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handleClick = index => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[index]) return;\n    boardCopy[index] = xIsNext ? \"X\" : \"O\";\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n  const handleResetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: [\"Winner is \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        cells: board,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-reset\",\n        onClick: handleResetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"znBF1eYeJNOReqN4BeETvwkOe4A=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","handleClick","index","boardCopy","handleResetGame","children","className","fileName","_jsxFileName","lineNumber","columnNumber","cells","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/learnReact/my-app/src/components/tictactoe/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./GameStyles.css\";\r\nimport { calculateWinner } from \"../../helpers/helpers\";\r\nconst Game = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const winner = calculateWinner(board);\r\n  const handleClick = (index) => {\r\n    const boardCopy = [...board];\r\n    if (winner || boardCopy[index]) return;\r\n    boardCopy[index] = xIsNext ? \"X\" : \"O\";\r\n    setBoard(boardCopy);\r\n    setXIsNext(!xIsNext);\r\n  };\r\n  const handleResetGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setXIsNext(true);\r\n  };\r\n  return (\r\n    <>\r\n    {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n    <div className=\"container\">\r\n      <Board cells={board} onClick={handleClick} />\r\n      <button className=\"game-reset\" onClick={handleResetGame}>\r\n        Reset Game\r\n      </button>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,kBAAkB;AACzB,SAASC,eAAe,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMe,MAAM,GAAGb,eAAe,CAACO,KAAK,CAAC;EACrC,MAAMO,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B,IAAIM,MAAM,IAAIG,SAAS,CAACD,KAAK,CAAC,EAAE;IAChCC,SAAS,CAACD,KAAK,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IACtCH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EACD,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BT,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BE,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,oBACEV,OAAA,CAAAE,SAAA;IAAAc,QAAA,GACCL,MAAM,iBAAIX,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAD,QAAA,GAAC,YAAU,EAACL,MAAM;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChErB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBhB,OAAA,CAACH,KAAK;QAACyB,KAAK,EAAEjB,KAAM;QAACkB,OAAO,EAAEX;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CrB,OAAA;QAAQiB,SAAS,EAAC,YAAY;QAACM,OAAO,EAAER,eAAgB;QAAAC,QAAA,EAAC;MAEzD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAACjB,EAAA,CA1BID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}